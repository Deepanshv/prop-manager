
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for the 'properties' collection
    match /properties/{propertyId} {
      // Anyone can read a property that is publicly listed.
      allow read: if resource.data.isListedPublicly == true;
      
      // The owner can create, read, update, and delete their own properties.
      allow create: if request.auth.uid == request.resource.data.ownerUid;
      allow read, update, delete: if request.auth.uid == resource.data.ownerUid;

      // Allow the owner to manage the files subcollection for their property.
      match /files/{fileId} {
        allow read, write, delete: if request.auth.uid == get(/databases/$(database)/documents/properties/$(propertyId)).data.ownerUid;
      }
      
      // Allow the owner to manage the media subcollection for their property.
      match /media/{mediaId} {
        allow read, write, delete: if request.auth.uid == get(/databases/$(database)/documents/properties/$(propertyId)).data.ownerUid;
      }
    }

    // Rules for the 'prospects' collection
    match /prospects/{prospectId} {
      // The owner can create, read, update, and delete their own prospects.
      allow create: if request.auth.uid == request.resource.data.ownerUid;
      allow read, update, delete: if request.auth.uid == resource.data.ownerUid;
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read and write to their own user document.
      allow read, write: if request.auth.uid == userId;
    }
  }
}
